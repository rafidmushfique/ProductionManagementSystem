@model LILI_FPMS.Models.TblReturn
<div id="modal-placeholder">
</div>

<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Submission Blocked</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
       <p id="modalMsg"></p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>

<!-- Content Header (Page header) -->
<section class="content-header">
    @*<h1>
            Employee
        </h1>*@
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
        <li class="active">Requisition Return</li>
        <li class="active">Add Return</li>
    </ol>
</section>
<!-- Main content -->
<section class="content container-fluid">
    <!-- Horizontal Form -->
    <div class="box box-info" style="border:1px solid; border-color:cadetblue; padding:10px">
        @*<div class="box-header with-border">
                <h3 class="box-title">Add Employee</h3>
            </div>*@
        <!-- /.box-header -->
        <!-- form start -->
                <form class="form-horizontal" asp-controller="RequisitionReturn" method="post" asp-action="CreateReturn" onsubmit="return SubmissionCheck()">
                    <div class="card-body">
                        <div class="form-group">
                            <label for="inputEmail3" class="col-sm-2 control-label">Return No</label>
                            <div class="col-sm-4">
                                <input type="text" asp-for="ReturnNo" class="form-control" placeholder="PlanningNo" value="@Model.ReturnNo" readonly>
                                <span asp-validation-for="ReturnNo"></span>
                            </div>
                            <label asp-for="ReturnDate" class="col-sm-2 control-label"></label>
                            <div class="col-sm-3 input-group date" style="padding-left:15px;">
                                <input asp-for="ReturnDate" type="date" class="form-control" />
                                <span asp-validation-for="ReturnDate" class="input-group-addon">
                                    <span class="glyphicon glyphicon-calendar"></span>
                                </span>
                            </div>
                        </div>

                        <div class="form-group">
                            <label for="inputEmail3" class="col-sm-2 control-label">Requisition No.</label>
                            <div class="col-sm-2">
                                <input type="text"id="js_requisition_no" asp-for="RequisitionNo" class="form-control" placeholder="Requisition No" readonly>
                            </div>
                            <div class="col-sm-2 controls">
                                <button type="button" class="btn btn-info" data-toggle="ajax-modal" data-target="#add-Requisition" data-url="@Url.Action("addRequisition")">
                                    <span class="glyphicon glyphicon-search"></span>
                                </button>
                            </div>

                            <label for="inputEmail3" class="col-sm-2 control-label">BatchNo</label>
                            <div class="col-sm-4">
                                <input type="text" asp-for="BatchNo" class="form-control" placeholder="BatchNo" readonly>
                            </div>
                        </div>

                        <div class="form-group">
                            <label for="inputEmail3" class="col-sm-2 control-label">Requisition For</label>
                            <div class="col-sm-4">
                                <input type="text" asp-for="ProductName" class="form-control" placeholder="Requisition For" readonly>
                            </div>
                            <label for="inputEmail3" class="col-sm-2 control-label">Unit</label>
                            <div class="col-sm-4">
                                <input type="text" asp-for="Unit" Id="Unit" class="form-control" placeholder="Unit" readonly>
                            </div>
                        </div>

                        <div class="form-group">
                            <label for="inputEmail3" class="col-sm-2 control-label">BatchSize</label>
                            <div class="col-sm-4">
                                <input type="text" asp-for="BatchSize" Id="BatchSize" class="form-control" placeholder="BatchSize" readonly>
                            </div>
                        </div>
                    </div>

                        <div class="form-group">
                            <label asp-for="Comments" class="col-sm-2 control-label">Comments</label>
                            <div class="col-sm-10">
                                <textarea type="text" asp-for="Comments" class="form-control" placeholder="Comments" rows="1"></textarea>
                                <span asp-validation-for="Comments"></span>
                            </div>
                        </div>
                        <div class="card-body">
                            <div style="border:0px solid #ccc; min-width:30%;  overflow:hidden;">
                                <table id="htReqMaterialDetail" class="table table-bordered table-striped">
                                    <thead>
                                        <tr>
                                            <th style="width:7%">Row No.</th>
                                            <th>RM/PM Code</th>
                                            <th>RM/PM Name</th>
                                            <th>Unit</th>
                                            <th>GRN No.</th>
                                            <th>Issue Qty</th> 
                                            <th>Available FloorStock</th>
                                            <th>Return Qty</th>
                                            <th>Type</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody id="tblReqBOMDtl">

                                  @*    @{  int i = 0;
                                        foreach (var item in Model.TblReturnDetails)
                                        {
                                            var index = i;
                                                            <tr>
                                                       
                                                                <td style="display:none"><input name='TblReturnDetails.Index' type="hidden" value=@index /></td>
                                                                <td style="display:none">@Html.EditorFor(modelItem => modelItem.TblReturnDetails[i].MaterialCode, new { @id = "MaterialCode_" + i })</td>
                                                                <td>@Html.DisplayFor(modelItem => modelItem.TblReturnDetails[i].MaterialCode, new { @id = "MaterialCode_" + i })</td>
                                                                <td>@Html.DisplayFor(modelItem => modelItem.TblReturnDetails[i].MaterialName, new { @id = "MaterialName_" + i })</td>
                                                                <td>@Html.DisplayFor(modelItem => modelItem.TblReturnDetails[i].Unit, new { @id = "Unit_" + i })</td>
                                                                <td>@Html.DisplayFor(modelItem => modelItem.TblReturnDetails[i].GRNNo, new { @id = "GRNNo_" + i })</td>
                                                                <td>@Html.DisplayFor(modelItem => modelItem.TblReturnDetails[i].IssuedQty, new { @id = "IssuedQty_" + i, htmlAttributes = new { @style = "width: 150px; text-align:right;" } })</td>
                                                                <td>@Html.EditorFor(modelItem => modelItem.TblReturnDetails[i].ReturnQty, new { @id = "ReturnQty_" + i, htmlAttributes = new { @style = "width: 150px; text-align:right;" } })</td>
                                                                <td></td>
                                                                <td><input type="button" value="Remove" onClick="$(this).closest('tr').remove();"></td>
                                                            </tr>
                                            i++;
                                        }
                                        } *@


                                    </tbody>
                                </table>
                            </div>
                        </div>

                        <!-- /.card-body -->
                        <div class="box-footer">

                            <a class="btn btn-mini btn-primary" href='@Url.Content("/RequisitionReturn/Index")'>Cancel</a>
                            <button type="submit" class="btn btn-info pull-right">Create</button>

                        </div>
                        <!-- /.box-footer -->
        </form>
    </div>

</section>
<script type="text/javascript">
   
   

    function removeRow(id) {
        var controlToBeRemoved = "#trtbEduDtl" + id;
        //alert(controlToBeRemoved);
        $(controlToBeRemoved).remove();
    }

    function removeRowExpert(id) {
        var controlToBeRemoved = "#trtbExpertDtl" + id;
        //alert(controlToBeRemoved);
        $(controlToBeRemoved).remove();
    }

    // EXTRACT AND SUBMIT TABLE DATA.
    function sumbitData() {

        var myTab = document.getElementById('tblProductDetail');
        var values = new Array();

        // LOOP THROUGH EACH ROW OF THE TABLE.
        for (row = 1; row < myTab.rows.length - 1; row++) {
            for (c = 0; c < myTab.rows[row].cells.length; c++) {   // EACH CELL IN A ROW.

                var element = myTab.rows.item(row).cells[c];
                if (element.childNodes[0].getAttribute('type') == 'text') {
                    values.push("'" + element.childNodes[0].value + "'");
                }
            }
        }
        console.log(values);
    }

    function SubmissionCheck()
    {
         var floorstock= FloorStockCheck();
        if (floorstock) {
            var rowcount = $('#htReqMaterialDetail >tbody >tr').length;
            var recount = 0;
            for (let i = 0; i < rowcount; i++) {
                let returnqtyrow = $("#TblReturnDetails_" + i + "_ReturnQty");
                if (returnqtyrow.val() != 0) {

                    let returnTyperow = $("#TblReturnDetails_" + i + "_Type");
                    if (returnTyperow.val() == '') {

                        //alert("Please Select a Type for Detail Table row no: "+ (i+1));
                        $("#modalMsg").append("Please Select a <b>Type</b> for Detail Table Row No: " + (i + 1));
                        $("#myModal").modal('show');
                        recount = recount + 1;
                    }

                }
            }
            if (recount > 0) {
                return false;
            }
            else { 
                return true;
            }
        }
        else { 
            return false;
        }
    }
    function FloorStockCheck() {
        let count = 0;
        var table = $("#htReqMaterialDetail tbody");

        table.find('tr').each(function (i, el) {
            var $tds = $(this).find('td');
            var rmpmName = $(this).find("td").eq(2).find(":text").val();
            var floorStock = 0;
            floorStock = $('.calFloorStock', $tds).val(); // Current row Standard Consumption.
            if ($('.calReturnQty', $tds).val() > Number(floorStock)) {

                alert("Current use quantity should not exceed Floor Stock->" + rmpmName + ":" + floorStock);

                count = count + 1;
            }
        });
        if (count > 0) {
            return false;
        }
        else { return true; }

    }


    $('#QcpassQty').keyup(function () {
        var Qcqty = Number($('#Qcqty').val());
        var QcpassQty = Number(this.value);
        var QcrejectQty = Number(Number(Qcqty) - Number(QcpassQty));
        $('#QcrejectQty').val(QcrejectQty);

    });

    $(document).ready(function () {
        //Select all text of input in td, on get focus.
        $('#htReqMaterialDetail').on('focus', 'input', function () {
            $("input.calReturnQty").on('focus', function () { $(this).select(); });
        });
    });
    

</script>




